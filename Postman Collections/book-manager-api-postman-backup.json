{
	"info": {
		"_postman_id": "aebfe73d-8c51-41ae-9dd9-43321d453ff8",
		"name": "book-manager-api",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "getAllBooks",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "91087313-eb16-4c0e-bc98-335c643b39a1",
						"exec": [
							"pm.test(\"getAllBooks success with status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "9b99e8cd-7630-45a2-ac0b-b4a8cb2c2ec9",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{base_url}}/book"
			},
			"response": []
		},
		{
			"name": "getBookByIdFail_NotExist",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "651816f5-50e9-483f-bf41-79963f25c19a",
						"exec": [
							"pm.test(\"Book not found with status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Check error return and message is 'Book with book id:[?] does not exist!'\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.error).to.eql(\"Not Found\");",
							"    pm.expect(jsonData.message).to.include(\"Book with book id:\");",
							"    pm.expect(jsonData.message).to.include(\"does not exist!\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "dd4b5e07-19f7-4f12-866c-df7e3436e1ee",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{base_url}}/book/5"
			},
			"response": []
		},
		{
			"name": "getBookById",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "651816f5-50e9-483f-bf41-79963f25c19a",
						"exec": [
							"pm.test(\"GetBookById success with status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "25b8a13e-fd4f-46a3-8c3c-680076ca0c27",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{base_url}}/book/1"
			},
			"response": []
		},
		{
			"name": "createBookSuccess",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "64659e8b-d71e-461c-a67e-44d2b6c51dde",
						"exec": [
							"pm.test(\"Create book success with status code is 201\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "1074eedf-ddb1-4b48-b83a-30a9c04045a5",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": 3,\n    \"title\": \"Fabulous Three\",\n    \"description\": \"This is the description for the Fabulous Three\",\n    \"author\": \"Person Three\",\n    \"genre\": \"Fantasy\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{base_url}}/book"
			},
			"response": []
		},
		{
			"name": "createBookFail_DuplicateId",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e8a338bd-a212-4b66-92fa-70ff7d59fc5d",
						"exec": [
							"pm.test(\"Create Book failed with Status code is 409\", function () {",
							"    pm.response.to.have.status(409);",
							"});",
							"pm.test(\"Check error return and message is 'Create book failed. Book with the same id:[?] alreay exists!!'\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.error).to.eql(\"Conflict\");",
							"    pm.expect(jsonData.message).to.include(\"Create book failed. Book with the same id:\");",
							"    pm.expect(jsonData.message).to.include(\"alreay exists!\");",
							"",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "fa9838fd-35cd-4c6c-922d-6e9a607187ca",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": 1,\n    \"title\": \"Fabulous One\",\n    \"description\": \"This is the description for the Fabulous One\",\n    \"author\": \"Person One\",\n    \"genre\": \"Fantasy\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{base_url}}/book"
			},
			"response": []
		}
	]
}